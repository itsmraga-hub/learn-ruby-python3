Importing a function from the module:

>>> matrix_divided = __import__('docs_test').matrix_divided

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 4)
[[0.25, 0.5, 0.75], [1.0, 1.25, 1.5]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
  File "<pyshell#5>", line 1, in <module>
    matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
  File "<pyshell#1>", line 14, in matrix_divided
    raise ZeroDivisionError("division by zereo")
ZeroDivisionError: division by zereo
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], '1')
Traceback (most recent call last):
  File "<pyshell#6>", line 1, in <module>
    matrix_divided([[1, 2, 3], [4, 5, 6]], '1')
  File "<pyshell#1>", line 11, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], ['4', 5, 6]], 3)
Traceback (most recent call last):
  File "<pyshell#8>", line 1, in <module>
    matrix_divided([[1, 2, 3], ['4', 5, 6]], 3)
  File "<pyshell#1>", line 5, in matrix_divided
    raise TypeError("matrix mst be a matrix (list of lists) of integers/floats")
TypeError: matrix mst be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
Traceback (most recent call last):
  File "<pyshell#10>", line 1, in <module>
    matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
  File "<pyshell#1>", line 8, in matrix_divided
    raise TypeError("Each row of the matrixmust have the same size")
TypeError: Each row of the matrixmust have the same size
